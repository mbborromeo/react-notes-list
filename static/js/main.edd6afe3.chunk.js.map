{"version":3,"sources":["components/Shared/NoteTextArea/NoteTextArea.js","components/Shared/PriorityDropDown/PriorityDropDown.js","components/List/AddForm/AddForm.js","components/List/List.js","components/Detail/Detail.js","App.js","index.js"],"names":["NoteTextArea","value","handleOnChange","view","id","name","rows","cols","wrap","placeholder","onChange","PriorityDropDown","disabled","hidden","AddForm","addFunction","useState","newItem","setNewItem","itemPriority","setItemPriority","showContentValidationMsg","setShowContentValidationMsg","showPriorityValidationMsg","setShowPriorityValidationMsg","showNoteAddedConfirmationMsg","setShowNoteAddedConfirmationMsg","resetFields","handleSubmit","useCallback","e","preventDefault","handleTextAreaOnChange","target","handleSelectOnChange","onSubmit","type","onClick","className","List","list","setList","filterConfig","setFilterConfig","deleteToDo","editedList","deleted","getMaxID","sorted","map","item","sort","a","b","length","addToDo","text","priority","newListItem","content","newList","useEffect","localList","JSON","parse","localStorage","getItem","setItem","stringify","filteredResults","useMemo","filteredListNonDeleted","filter","note","to","data-id","aria-label","Detail","match","existingNote","setExistingNote","existingPriority","setExistingPriority","loaded","setLoaded","showNoChangesValidationMsg","setShowNoChangesValidationMsg","showChangesSavedConfirmationMsg","setShowChangesSavedConfirmationMsg","detailID","parseInt","params","savedNote","setSavedNote","savedPriority","setSavedPriority","editToDo","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edd6afe3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction NoteTextArea({value, handleOnChange, view}){\r\n\r\n  return (\r\n    <textarea \r\n      id=\"note\" \r\n      name=\"note\" \r\n      rows={ view===\"detail\" ? 16 : 4 }\r\n      cols=\"35\"\r\n      wrap=\"hard\"\r\n      placeholder=\"Type note\"\r\n      value={ value }\r\n      onChange={ handleOnChange }\r\n    />\r\n  );\r\n}\r\n\r\nexport default NoteTextArea;","import React from 'react';\r\n\r\nfunction PriorityDropDown({ value, handleOnChange, view}){\r\n\r\n  return (\r\n    <select \r\n      name=\"priority\" \r\n      id=\"priority\" \r\n      value={ value }\r\n      onChange={ handleOnChange }\r\n    >\r\n      { view===\"list\" ?\r\n        <option value=\"all\">ALL</option>\r\n        :\r\n        <option value=\"\" disabled hidden>Select priority</option>\r\n      }       \r\n      <option value=\"high\">High</option>\r\n      <option value=\"normal\">Normal</option>\r\n      <option value=\"low\">Low</option>\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default PriorityDropDown;","import React, { useState, useCallback } from 'react';\r\nimport NoteTextArea from '../../Shared/NoteTextArea/NoteTextArea';\r\nimport PriorityDropDown from '../../Shared/PriorityDropDown/PriorityDropDown';\r\nimport '../../Detail/Detail.css';\r\n\r\nfunction AddForm({ addFunction }) {\r\n  const [newItem, setNewItem] = useState('');\r\n  const [itemPriority, setItemPriority] = useState('');\r\n  const [showContentValidationMsg, setShowContentValidationMsg] = useState(false);\r\n  const [showPriorityValidationMsg, setShowPriorityValidationMsg] = useState(false);\r\n  const [showNoteAddedConfirmationMsg, setShowNoteAddedConfirmationMsg] = useState(false);\r\n\r\n  // add useCallback or useMemo...\r\n  const resetFields = () => {\r\n    if( newItem || itemPriority ){\r\n      setNewItem('');\r\n      setItemPriority('');\r\n      setShowContentValidationMsg(false);\r\n      setShowPriorityValidationMsg(false);\r\n    }    \r\n  }\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setShowNoteAddedConfirmationMsg(false);\r\n\r\n      if (!newItem) {        \r\n        setShowContentValidationMsg(true);\r\n      } else {\r\n        setShowContentValidationMsg(false);\r\n      }\r\n\r\n      if (!itemPriority) {        \r\n        setShowPriorityValidationMsg(true);\r\n      } else {\r\n        setShowPriorityValidationMsg(false);\r\n      }\r\n      \r\n      if(newItem && itemPriority){\r\n        addFunction(newItem, itemPriority);\r\n        resetFields();\r\n        setShowNoteAddedConfirmationMsg(true);\r\n      }      \r\n    },\r\n    [newItem, itemPriority, addFunction]\r\n  );\r\n\r\n  const handleTextAreaOnChange = useCallback(\r\n    (e) => {\r\n      setShowNoteAddedConfirmationMsg(false);\r\n      setNewItem(e.target.value);\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleSelectOnChange = useCallback(\r\n    (e) => {\r\n      setShowNoteAddedConfirmationMsg(false);\r\n      setItemPriority(e.target.value);\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <NoteTextArea value={ newItem } handleOnChange={ handleTextAreaOnChange } />\r\n      <br />\r\n      \r\n      <PriorityDropDown value={ itemPriority } handleOnChange={ handleSelectOnChange } />\r\n      &nbsp;&nbsp;\r\n\r\n      <button type=\"submit\">Add</button>\r\n      &nbsp;\r\n\r\n      <input\r\n        type=\"button\"\r\n        value=\"Clear\"\r\n        onClick={() => {\r\n          resetFields();\r\n        }}\r\n      />\r\n\r\n      <br />\r\n      <div id=\"feedback\">\r\n        { showContentValidationMsg && // !newItem &&\r\n          <span className=\"error\">\r\n            Note must not be empty.&nbsp;\r\n          </span>\r\n        }\r\n        { showPriorityValidationMsg && // !itemPriority &&\r\n          <span className=\"error\">\r\n            Priority must be selected.\r\n          </span>\r\n        }\r\n        { showNoteAddedConfirmationMsg &&\r\n          <span className=\"confirmation\">\r\n            Note added.\r\n          </span>\r\n        }\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddForm;\r\n","import React, {\r\n  useState, useEffect, useCallback, useMemo\r\n} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AddForm from './AddForm/AddForm';\r\nimport PriorityDropDown from '../Shared/PriorityDropDown/PriorityDropDown';\r\nimport './List.css';\r\n\r\n// Reference: https://www.digitalocean.com/community/tutorials/how-to-build-a-react-to-do-app-with-react-hooks\r\nfunction List() {\r\n  const [list, setList] = useState( [] );\r\n  const [filterConfig, setFilterConfig] = useState('all');\r\n\r\n  /*\r\n  const getArrayIndexOfItem = useCallback(\r\n    (id) => {\r\n      const isItemOfInterest = (element) => element.id === id;\r\n      return list.findIndex(isItemOfInterest);\r\n    },\r\n    [list]\r\n  );\r\n  */\r\n\r\n  const deleteToDo = useCallback(\r\n    (id) => {\r\n      const editedList = [...list];\r\n      editedList[id - 1].deleted = true;\r\n      setList( editedList );\r\n    },\r\n    [list] // dependencies that require a re-render for //, getArrayIndexOfItem\r\n  );\r\n\r\n  // Reference: https://www.danvega.dev/blog/2019/03/14/find-max-array-objects-javascript\r\n  const getMaxID = useCallback(\r\n    () => {\r\n      const ids = list.map((item) => item.id);\r\n      const sorted = ids.sort((a, b) => a - b); // sort ascending order\r\n      return sorted[sorted.length - 1] || 0; // find max ID, else start at 1 (0)\r\n    },\r\n    [list]\r\n  );\r\n\r\n  const addToDo = useCallback(\r\n    (text, priority) => {\r\n      const newListItem = {\r\n        id: getMaxID() + 1,\r\n        content: text,\r\n        priority: priority,\r\n        deleted: false\r\n      };\r\n\r\n      const newList = [...list, newListItem]; // add new item to end of list\r\n      setList(newList);\r\n    },\r\n    [list, getMaxID]\r\n  );  \r\n\r\n  // Reference: https://dev.to/saranshk/react-hooks-and-local-storage-let-s-build-a-todo-app-39g3\r\n  // empty array dependency so effect only runs once initially\r\n  useEffect(() => {\r\n    const localList = JSON.parse( localStorage.getItem('localList') );\r\n\r\n    if (localList) {\r\n      setList( localList );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem( 'localList', JSON.stringify( list ) );\r\n  }, [list]);\r\n\r\n  const filteredResults = useMemo(\r\n    () => {\r\n      if (list) {\r\n        // filter out deleted\r\n        const filteredListNonDeleted = list.filter( (note) => !note.deleted );        \r\n\r\n        // filter by priority\r\n        if( filterConfig===\"all\" ){\r\n          return filteredListNonDeleted;\r\n        } else {\r\n          const filteredListByPriority = filteredListNonDeleted.filter( (note) => note.priority===filterConfig );\r\n          return filteredListByPriority;\r\n        }        \r\n      }\r\n      return undefined;\r\n    },\r\n    [list, filterConfig]\r\n  );\r\n\r\n  const handleSelectOnChange = useCallback(\r\n    (e) => {\r\n      setFilterConfig(e.target.value)\r\n    },\r\n    []\r\n  );\r\n  \r\n  // possibly use useMemo here, and/or define a function for sort\r\n  if (filteredResults) {\r\n    return (\r\n      <div>\r\n        <div id=\"header\">\r\n          <h1>Notes List</h1>\r\n          <AddForm addFunction={addToDo} />\r\n        </div>\r\n        \r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"width-half\">\r\n                Note\r\n              </th>\r\n              <th className=\"width-quarter\">\r\n                Priority&nbsp;\r\n                \r\n                <PriorityDropDown view=\"list\" value={ filterConfig } handleOnChange={ handleSelectOnChange } />\r\n              </th>\r\n              <th className=\"width-quarter\">\r\n                Actions                \r\n              </th>\r\n            </tr>\r\n          </thead>                \r\n          \r\n          { filteredResults.length > 0 && \r\n          <tbody>\r\n            {\r\n              filteredResults.map((item) => (\r\n                <tr key={item.id}>\r\n                  <td className=\"content\">\r\n                    <Link\r\n                      to={`/detail/${item.id}`}\r\n                      data-id={item.id}\r\n                    >\r\n                      { item.content }\r\n                    </Link>\r\n                  </td>\r\n                  <td className=\"width-quarter\">\r\n                    { item.priority }\r\n                  </td>\r\n                  <td className=\"width-quarter\">\r\n                    <Link\r\n                      to={`/detail/${item.id}`}\r\n                      data-id={item.id}\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                    <button type=\"button\" aria-label={`Delete item ${item.id}`} onClick={() => deleteToDo(item.id)}>X</button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            }\r\n          </tbody>\r\n          }\r\n        </table>\r\n\r\n        { list.length === 0 &&\r\n          <div>No results to display</div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  return <div>Loading...</div>;\r\n}\r\n\r\nexport default List;\r\n","import React, {\r\n  useState, useEffect, useCallback //, useMemo\r\n} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Detail.css';\r\nimport NoteTextArea from '../Shared/NoteTextArea/NoteTextArea';\r\nimport PriorityDropDown from '../Shared/PriorityDropDown/PriorityDropDown';\r\n\r\nfunction Detail({ match }) {  \r\n  const [list, setList] = useState( [] );\r\n  const [existingNote, setExistingNote] = useState('');\r\n  const [existingPriority, setExistingPriority] = useState('');\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [showContentValidationMsg, setShowContentValidationMsg] = useState(false);\r\n  const [showNoChangesValidationMsg, setShowNoChangesValidationMsg] = useState(false);\r\n  const [showChangesSavedConfirmationMsg, setShowChangesSavedConfirmationMsg] = useState(false);\r\n  const detailID = parseInt(match.params.id);\r\n  // Use useRef to get reference of previous state  \r\n  // ie. https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n  // or manually created a previous value state for note and priority\r\n  const [savedNote, setSavedNote] = useState('');\r\n  const [savedPriority, setSavedPriority] = useState('');\r\n\r\n  useEffect(() => {\r\n    const localList = JSON.parse( localStorage.getItem('localList') );\r\n\r\n    if (localList) {\r\n      setList( localList );\r\n      setExistingNote( localList[detailID-1].content );\r\n      setExistingPriority( localList[detailID-1].priority );\r\n      setSavedNote( localList[detailID-1].content );\r\n      setSavedPriority( localList[detailID-1].priority );\r\n      setLoaded(true);\r\n    }\r\n  }, [detailID]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem( 'localList', JSON.stringify( list ) );\r\n  }, [list]);  \r\n\r\n  const editToDo = useCallback(\r\n    (text, priority) => {\r\n      const newListItem = {\r\n        id: detailID,\r\n        content: text,\r\n        priority: priority\r\n      };\r\n\r\n      // update array item at index detailID\r\n      const newList = [...list];\r\n      newList[detailID-1] = newListItem;\r\n      setList(newList);\r\n      setSavedNote(text);\r\n      setSavedPriority(priority);\r\n      setShowChangesSavedConfirmationMsg(true);\r\n    },\r\n    [list, detailID]\r\n  );\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setShowChangesSavedConfirmationMsg(false);\r\n\r\n      if (!existingNote) {\r\n        setShowContentValidationMsg(true);\r\n      } else {\r\n        setShowContentValidationMsg(false);\r\n      }\r\n\r\n      if (existingNote && existingNote===savedNote && existingPriority===savedPriority) {\r\n        setShowNoChangesValidationMsg(true);\r\n      } else {\r\n        setShowNoChangesValidationMsg(false);\r\n      }\r\n      \r\n      if( existingNote && (existingNote!==savedNote || existingPriority!==savedPriority) ){\r\n        editToDo(existingNote, existingPriority);\r\n      }      \r\n\r\n      // notify user note was saved and go back to Homepage\r\n\r\n    },\r\n    [existingNote, existingPriority, savedNote, savedPriority, editToDo]\r\n  );\r\n\r\n  const handleTextAreaOnChange = useCallback(\r\n    (e) => {\r\n      setShowChangesSavedConfirmationMsg(false);\r\n      setExistingNote(e.target.value)\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleSelectOnChange = useCallback(\r\n    (e) => {\r\n      setShowChangesSavedConfirmationMsg(false);\r\n      setExistingPriority(e.target.value)\r\n    },\r\n    []\r\n  );\r\n\r\n  if (loaded && list.length > 0) {\r\n    return (\r\n      <div>\r\n        <h3>Note - ID { detailID }</h3>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <NoteTextArea view=\"detail\" value={ existingNote } handleOnChange={ handleTextAreaOnChange } />\r\n          <br /><br />\r\n          \r\n          <PriorityDropDown value={ existingPriority } handleOnChange={ handleSelectOnChange } />\r\n          <br /><br />\r\n\r\n          <button type=\"submit\">Update</button>\r\n        </form>\r\n\r\n        <br />\r\n        <div id=\"feedback\">\r\n          { showContentValidationMsg &&\r\n            <span className=\"error\">\r\n              Note must not be empty.\r\n            </span>\r\n          }\r\n          { showNoChangesValidationMsg &&\r\n            <span className=\"error\">\r\n              No change has been made.\r\n            </span>\r\n          }\r\n          {\r\n            showChangesSavedConfirmationMsg &&\r\n            <span className=\"confirmation\">\r\n              Note updated.\r\n            </span>\r\n          }\r\n        </div>\r\n\r\n        <br />\r\n        <br />\r\n        <Link\r\n          to=\"/\"\r\n          className=\"button back\"\r\n        >\r\n          &lt; Back\r\n        </Link>\r\n      </div>\r\n    );\r\n  } if (loaded && list.length === 0) {\r\n    return <div>No detail to display</div>;\r\n  }\r\n  return <div>Loading...</div>;\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'; // Redirect,\r\nimport List from './components/List/List';\r\nimport Detail from './components/Detail/Detail';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={List}\r\n          />\r\n\r\n          <Route\r\n            path=\"/detail/:id\"\r\n            exact\r\n            component={Detail}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <App />, // </React.StrictMode>\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}